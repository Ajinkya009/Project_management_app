{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/account.guard.ts","./src/app/account.service.ts","./src/app/account/account.component.ts","./src/app/account/account.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dashboard.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/project-dialog/project-dialog.component.ts","./src/app/project-dialog/project-dialog.component.html","./src/app/project.service.ts","./src/app/project/project.component.ts","./src/app/project/project.component.html","./src/app/shared.service.ts","./src/app/task-dialog/task-dialog.component.ts","./src/app/task-dialog/task-dialog.component.html","./src/app/task.service.ts","./src/app/task/task.component.ts","./src/app/task/task.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AccountService } from './account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountGuard implements CanActivate {\n\n  constructor(private account:AccountService){\n    //console.log(this.account.isLoggedIn);\n  }\n  \n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.account.isLoggedIn;\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router'; \n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  private loggedInStatus = false;\n\n  constructor(private http:HttpClient, private router:Router) { }\n\n  setLoggedIn(value:boolean){\n    this.loggedInStatus = value;\n  }\n\n  get isLoggedIn(){\n    return localStorage.getItem('auth_token')!==null;\n  }\n\n  loginUser(username,password){\n    return this.http.post('/api/auth/login/',{\n      username:username,\n      password: password\n    });\n  }\n\n  registerUser(username,password,email){\n    return this.http.post('/api/auth/signup/',{\n      username:username,\n      password:password,\n      email:email\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ToastrService } from 'ngx-toastr';\nimport { AccountService } from '../account.service';\nimport { SharedService } from '../shared.service';\nimport { Router } from '@angular/router';\nimport { HeaderComponent } from '../header/header.component';\nimport { error } from '@angular/compiler/src/util';\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n  loginForm : boolean = true;\n  constructor(private account:AccountService, private router:Router,private toastr: ToastrService, private sharedService:SharedService) { }\n\n  ngOnInit(): void {\n    if(localStorage.getItem('auth_token')!=null){\n      this.router.navigate(['dashboard']);\n    }\n  }\n\n  /** Login and redirect user to dashboard page */\n  loginUser(event){\n    event.preventDefault();\n    const target = event.target;\n    const username = target.querySelector(\"#username\").value;\n    const password = target.querySelector(\"#password\").value\n    this.account.loginUser(username,password).subscribe(data=>{\n      if(data.hasOwnProperty('auth_token')){\n        localStorage.setItem('auth_token',data['auth_token']);\n        this.sharedService.toggleHeader(true);\n        this.router.navigate(['dashboard']);\n      }\n    },(err:HttpErrorResponse)=>{\n      Object.keys(err.error).map(key=>{\n        this.toastr.error(err.error[key],key);\n      });\n      \n    });\n  }\n\n  registerUser(event){\n    event.preventDefault();\n    const target = event.target;\n    const username = target.querySelector(\"#username\").value;\n    const password = target.querySelector(\"#password\").value;\n    const email = target.querySelector(\"#email\").value;\n    this.account.registerUser(username,password,email).subscribe(data=>{\n      if(data.hasOwnProperty('auth_token')){\n        localStorage.setItem('auth_token',data['auth_token']);\n        this.sharedService.toggleHeader(true);\n        this.router.navigate(['dashboard']);\n      }\n    },(err:HttpErrorResponse)=>{\n      Object.keys(err.error).map(key=>{\n        this.toastr.error(err.error[key],key);\n      });\n    });\n  }\n\n  /** Toggle login/signup form */\n  toggleForm(login:boolean){\n    this.loginForm = login;\n  }\n\n}\n","<div class=\"login-page\">\n  <div class=\"form\">\n    <form *ngIf=\"!loginForm\" class=\"register-form\" (submit)=\"registerUser($event)\">\n      <input type=\"text\" placeholder=\"Userame\" id=\"username\"/>\n      <input type=\"password\" placeholder=\"Password\" id=\"password\"/>\n      <input type=\"text\" placeholder=\"Email address\" id=\"email\"/>\n      <button>create</button>\n      <p class=\"message\">Already registered? <a (click)=\"toggleForm(true)\">Sign In</a></p>\n    </form>\n    <form *ngIf=\"loginForm\" class=\"login-form\" (submit)=\"loginUser($event)\">\n      <input type=\"text\" placeholder=\"username\" id=\"username\"/>\n      <input type=\"password\" placeholder=\"password\" id=\"password\"/>\n      <button>login</button>\n      <p class=\"message\">Not registered? <a (click)=\"toggleForm(false)\">Create an account</a></p>\n    </form>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'taskManager';\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AppRoutingModule } from './app-routing.module';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatGridListModule } from '@angular/material/grid-list';\n\n/*local components*/ \nimport { AppComponent } from './app.component';\nimport { AccountComponent } from './account/account.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { AccountGuard } from './account.guard';\nimport { AccountService } from './account.service';\n\n\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HeaderComponent } from './header/header.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatSelectModule} from '@angular/material/select';\nimport { ProjectDialogComponent } from './project-dialog/project-dialog.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule } from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport { ProjectComponent } from './project/project.component';\nimport { TaskDialogComponent } from './task-dialog/task-dialog.component';\nimport { TaskComponent } from './task/task.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AccountComponent,\n    DashboardComponent,\n    HeaderComponent,\n    ProjectDialogComponent,\n    ProjectComponent,\n    TaskDialogComponent,\n    TaskComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    NgbModule,\n    \n    //material modules\n    MatToolbarModule,\n    MatIconModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatTableModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n    MatSelectModule,\n    MatSlideToggleModule,\n    MatGridListModule,\n\n    //toastr modules\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n\n    //router modules\n    RouterModule.forRoot([\n    {\n      path: 'login',\n      component: AccountComponent\n    },\n    {\n      path: 'dashboard',\n      component: DashboardComponent,\n      canActivate: [AccountGuard]\n    },\n    {\n      path: 'project/:projectId/task/:taskId',\n      component: TaskComponent,\n      canActivate: [AccountGuard]\n    },\n    {\n      path: 'project/:projectId',\n      component: ProjectComponent,\n      canActivate: [AccountGuard]\n    },\n    {\n      path: '',\n      component: AppComponent,\n    }\n    ])\n  ],\n  providers: [AccountService,AccountGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n\n  constructor(private http:HttpClient) {}\n\n  fetchAllProjects(){\n    const auth_token = localStorage.getItem('auth_token');\n    return this.http.get('/api/project/',{headers:{Authorization:`Token ${auth_token}` }});\n  }\n\n  createNewProject(name,description,startDate,endDate){\n    const auth_token = localStorage.getItem('auth_token');\n    return this.http.post('/api/project/',{\n      name:name,\n      description:description,\n      startDate:startDate,\n      endDate:endDate\n    },{headers:{Authorization:`Token ${auth_token}` }});\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { DashboardService } from '../dashboard.service';\nimport { Router } from '@angular/router';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { ProjectDialogComponent } from '../project-dialog/project-dialog.component';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  constructor(private dashboardService: DashboardService,private router:Router,private dialog: MatDialog) { }\n  projects: any = [];\n  displayedColumns: string[] = ['position', 'name', 'start date', 'end date'];\n  ngOnInit(): void {\n    \n    this.dashboardService.fetchAllProjects().subscribe((data)=>{\n        this.projects = data;\n    });\n    \n  }\n\n  createNewProject(){\n    this.dialog.open(ProjectDialogComponent);\n  }\n\n  openProject(id){\n    this.router.navigate([`project/${id}`]);\n  }\n\n}\n","<div class=\"dashboard\">\n    <div class=\"newProjectButtonDiv\">\n        <button class=\"newProjectButton\" mat-raised-button color=\"primary\" (click)=\"createNewProject()\">New Project</button>\n    </div>\n    <div *ngIf=\"projects.length>0\" class=\"dashboardTableDiv\">\n        <div class=\"mat-elevation-z8\">\n            <table mat-table [dataSource]=\"projects\">\n\n                <!-- Position Column -->\n                <ng-container matColumnDef=\"position\">\n                <th mat-header-cell *matHeaderCellDef> No. </th>\n                <td mat-cell *matCellDef=\"let element; let i=index;\"> {{i+1}} </td>\n                </ng-container>\n\n                <!-- Name Column -->\n                <ng-container matColumnDef=\"name\">\n                <th mat-header-cell *matHeaderCellDef > Name </th>\n                <td mat-cell *matCellDef=\"let element\" style=\"cursor:pointer\" (click)=\"openProject(element.id)\"> {{element.name}} </td>\n                </ng-container>\n\n                <!-- Start Date Column -->\n                <ng-container matColumnDef=\"start date\">\n                <th mat-header-cell *matHeaderCellDef> Start Date </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.startDate}} </td>\n                </ng-container>\n\n                <!-- End Date Column -->\n                <ng-container matColumnDef=\"end date\">\n                <th mat-header-cell *matHeaderCellDef> End Date </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.endDate}} </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SharedService } from '../shared.service';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  loggedIn: boolean;\n  constructor(private router:Router,private sharedService: SharedService) {\n   }\n\n  ngOnInit(): void {\n    this.sharedService.logInFlag.subscribe(loggedIn=>{\n      this.loggedIn = loggedIn;\n    });\n  }\n\n  logout(){\n    localStorage.removeItem('auth_token');\n    this.sharedService.toggleHeader(false);\n    this.router.navigate(['login']);\n  }\n\n}\n","<div *ngIf=\"loggedIn\">\n    <mat-toolbar color=\"primary\">\n        <span><a href=\"/dashboard\" style=\"text-decoration:none; color:inherit\">Task Management App</a></span>\n        <span class=\"fill-space\"></span>\n        <button mat-button (click)=\"logout()\">logout</button>\n    </mat-toolbar>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport { FormGroup } from '@angular/forms';\nimport { DashboardService } from '../dashboard.service';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-project-dialog',\n  templateUrl: './project-dialog.component.html',\n  styleUrls: ['./project-dialog.component.css']\n})\nexport class ProjectDialogComponent implements OnInit {\n    form: FormGroup;\n    name: string;\n    startDate: Date;\n    endDate: Date;\n    description: String;\n    constructor(private dialogRef: MatDialogRef<ProjectDialogComponent>,\n      private dashboardService:DashboardService,\n      private router: Router) {}\n\n    ngOnInit(): void {\n    }\n\n    save() {\n      this.dashboardService.createNewProject(\n        this.name,\n        this.description,\n        this.startDate,\n        this.endDate\n      ).subscribe(data=>{\n        this.router.navigate([`project/${data['id']}`]);\n      });\n      this.dialogRef.close();\n    }\n\n    close() {\n        this.dialogRef.close();\n    }\n\n}\n","<h2 mat-dialog-title>Create New Project</h2>\n\n<mat-form-field>\n      <mat-label>Project Name</mat-label>\n      <input matInput [(ngModel)]=\"name\">\n</mat-form-field>\n<br/>\n<mat-form-field>\n      <mat-label>Description</mat-label>\n      <textarea matInput [(ngModel)]=\"description\"></textarea>\n</mat-form-field>\n<br/>\n<mat-form-field>\n      <mat-label>Start Date</mat-label>\n      <input matInput type=\"date\" [(ngModel)]=\"startDate\">\n</mat-form-field>\n<br/>\n<mat-form-field>\n      <mat-label>End Date</mat-label>\n      <input matInput type=\"date\" [(ngModel)]=\"endDate\">\n</mat-form-field>\n\n\n<mat-dialog-actions>\n    <button class=\"mat-raised-button\"(click)=\"close()\">Close</button>\n    \n    <button class=\"mat-raised-button mat-primary\"(click)=\"save()\">Save</button>\n</mat-dialog-actions>","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n\n  constructor(private router:Router, private http:HttpClient) { }\n\n  fetchProjectDetails(projectId){\n    const auth_token = localStorage.getItem('auth_token')\n    return this.http.get(`/api/project/${projectId}`,{headers:{Authorization:`Token ${auth_token}`}});\n  }\n\n  createNewTask(name,description,startDate,endDate,assignee,projectId){\n    const auth_token = localStorage.getItem('auth_token');\n    return this.http.post(`/api/project/${projectId}/task/`,{\n      name:name,\n      description:description,\n      startDate:startDate,\n      endDate:endDate,\n      assignee:assignee,\n      project:projectId\n    },{headers:{Authorization:`Token ${auth_token}` }});\n  }\n\n  updateProject(projectData){\n    const auth_token = localStorage.getItem('auth_token');\n    return this.http.put(`/api/project/${projectData.id}/`,projectData,{headers:{Authorization:`Token ${auth_token}`}});\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ProjectService } from '../project.service';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TaskDialogComponent } from '../task-dialog/task-dialog.component';\nimport { TaskService } from '../task.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { projectDetails } from '../interfaces/projectDetails';\nimport {Location} from '@angular/common';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css']\n})\nexport class ProjectComponent implements OnInit {\n  tasks: any = [];\n  projectData : projectDetails; \n  users: [];\n  displayedColumns: string[] = ['position', 'name', 'start date', 'end date','assignee'];\n  constructor(private projectService:ProjectService,\n    private taskService: TaskService,\n    private toastr: ToastrService, \n    private router:Router,\n    private route:ActivatedRoute,\n    private dialog: MatDialog,\n    private location: Location\n    ) { }\n\n  ngOnInit(): void {\n    let projectId = this.route.snapshot.params['projectId'];\n    localStorage.setItem('projectId',projectId);\n    this.projectService.fetchProjectDetails(projectId).subscribe((data:projectDetails)=>{\n      this.projectData = data['project'];\n      this.users = data['users'];\n      this.taskService.setUsers(this.users);\n      this.tasks = this.projectData.tasks;\n    },(err:HttpErrorResponse)=>{\n      this.toastr.error('Error!', err.error.detail);\n      this.router.navigate(['dashboard']);\n    });\n  }\n\n  createNewTask(){\n    this.dialog.open(TaskDialogComponent,{data:{users:this.users}});\n  }\n\n  openTask(taskId){\n    let projectId = this.projectData.id;\n    this.router.navigate([`project/${projectId}/task/${taskId}`]);\n  }\n\n  updateProject(){\n    this.projectService.updateProject(this.projectData).subscribe((data)=>{\n      this.toastr.success('Success!', 'Updated task successfully!');\n    },(err:HttpErrorResponse)=>{\n      this.toastr.error('Error!', err.error.detail);\n    });\n  }\n\n  back(){\n    this.location.back();\n  }\n\n  \n\n}\n","<div class=\"dashboard\">\n    <mat-grid-list cols=\"2\">\n        <mat-grid-tile>\n                <div class=\"projectDetailsDiv\">\n                    <mat-form-field appearance=\"outline\" class=\"name\">\n                        <mat-label>Project Name</mat-label>\n                        <input matInput [(ngModel)]=\"projectData.name\">\n                    </mat-form-field>\n                    <br/>\n                    <mat-form-field appearance=\"outline\" class=\"description\">\n                        <mat-label>Description</mat-label>\n                        <textarea rows=10 matInput [(ngModel)]=\"projectData.description\"></textarea>\n                    </mat-form-field>\n                    <br/>\n                    <mat-form-field appearance=\"outline\" class=\"startDate\">\n                        <mat-label>Start Date</mat-label>\n                        <input matInput type=\"date\" [(ngModel)]=\"projectData.startDate\">\n                    </mat-form-field>\n                    \n                    <mat-form-field appearance=\"outline\" class=\"endDate\">\n                        <mat-label>End Date</mat-label>\n                        <input matInput type=\"date\" [(ngModel)]=\"projectData.endDate\">\n                    </mat-form-field>\n                    <br/>\n                    <button class=\"mat-raised-button\" (click)=\"back()\">Close</button>\n                    <button class=\"mat-raised-button save mat-primary\" (click)=\"updateProject()\">Update</button>\n                </div>\n        </mat-grid-tile>\n        <mat-grid-tile>\n            <div>\n            </div>\n            <br/>\n            <div *ngIf=\"tasks.length>0\" class=\"dashboardTableDiv\">\n                <button class=\"newProjectButton\" mat-raised-button color=\"primary\" (click)=\"createNewTask()\" >New task</button>\n                <div class=\" example-container mat-elevation-z8\">\n                    <table mat-table [dataSource]=\"tasks\">\n\n                        <!-- Position Column -->\n                        <ng-container matColumnDef=\"position\">\n                        <th mat-header-cell *matHeaderCellDef> No. </th>\n                        <td mat-cell *matCellDef=\"let element; let i=index;\"> {{i+1}} </td>\n                        </ng-container>\n\n                        <!-- Name Column -->\n                        <ng-container matColumnDef=\"name\">\n                        <th mat-header-cell *matHeaderCellDef > Name </th>\n                        <td mat-cell *matCellDef=\"let element\" style=\"cursor:pointer\" (click)=\"openTask(element.id)\"> {{element.name}} </td>\n                        </ng-container>\n\n                        <!-- Start Date Column -->\n                        <ng-container matColumnDef=\"start date\">\n                        <th mat-header-cell *matHeaderCellDef> Start Date </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.startDate}} </td>\n                        </ng-container>\n\n                        <!-- End Date Column -->\n                        <ng-container matColumnDef=\"end date\">\n                        <th mat-header-cell *matHeaderCellDef> End Date </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.endDate}} </td>\n                        </ng-container>\n\n                        <!-- Assignee Column -->\n                        <ng-container matColumnDef=\"assignee\">\n                        <th mat-header-cell *matHeaderCellDef> Assignee </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{users[element.assignee-1][0]}} </td>\n                        </ng-container>\n\n                        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                    </table>\n                </div>\n            </div>\n        </mat-grid-tile>\n    </mat-grid-list>\n</div>","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n  private loggedIn = new BehaviorSubject(localStorage.getItem('auth_token')!==null);\n  logInFlag = this.loggedIn.asObservable();\n  constructor() { }\n\n  toggleHeader(flag){\n    this.loggedIn.next(flag);\n  }\n}\n","import { Component, OnInit,Inject } from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport { FormGroup } from '@angular/forms';\nimport { ProjectService } from '../project.service';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-task-dialog',\n  templateUrl: './task-dialog.component.html',\n  styleUrls: ['./task-dialog.component.css']\n})\nexport class TaskDialogComponent implements OnInit {\n  form: FormGroup;\n  name: string;\n  startDate: Date;\n  endDate: Date;\n  description: String;\n  assignee: String;\n  constructor(private dialogRef: MatDialogRef<TaskDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private projectService:ProjectService,\n    private router: Router,\n    private route:ActivatedRoute,\n    private toastr: ToastrService\n    ) {}\n\n  ngOnInit(): void {\n    \n  }\n\n  save(){\n    let projectId = localStorage.getItem('projectId');\n    this.projectService.createNewTask(this.name,this.description,this.startDate,this.endDate,this.assignee,projectId).subscribe((data)=>{\n      const taskId = data['id'];\n      this.dialogRef.close();\n      this.router.navigate([`project/${projectId}/task/${taskId}`]);\n    },(err:HttpErrorResponse)=>{\n      this.toastr.error('Error!', err.error.detail);\n    });\n  }\n\n  close(){\n    this.dialogRef.close();\n  }\n\n}\n","<h2 mat-dialog-title>Create New Task</h2>\n\n<mat-form-field>\n      <mat-label>Task Name</mat-label>\n      <input matInput [(ngModel)]=\"name\">\n</mat-form-field>\n<br/>\n<mat-form-field>\n      <mat-label>Description</mat-label>\n      <textarea matInput [(ngModel)]=\"description\"></textarea>\n</mat-form-field>\n<br/>\n<mat-form-field>\n      <mat-label>Start Date</mat-label>\n      <input matInput type=\"date\" [(ngModel)]=\"startDate\">\n</mat-form-field>\n<br/>\n<mat-form-field>\n      <mat-label>End Date</mat-label>\n      <input matInput type=\"date\" [(ngModel)]=\"endDate\">\n</mat-form-field>\n<br/>\n<mat-form-field>\n    <mat-select placeholder=\"Assignee\" [(ngModel)]=\"assignee\">\n        <mat-option *ngFor=\"let user of data.users\" [value]=\"user[1]\">\n        {{ user[0] }}\n        </mat-option>\n    </mat-select>\n</mat-form-field>\n<mat-dialog-actions>\n    <button class=\"mat-raised-button\"(click)=\"close()\">Close</button>\n    \n    <button class=\"mat-raised-button mat-primary\"(click)=\"save()\">Save</button>\n</mat-dialog-actions>","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n  users:[];\n  constructor(private router:Router, private http:HttpClient) { }\n\n  fetchTaskDetails(projectId,taskId){\n    const auth_token = localStorage.getItem('auth_token');\n    return this.http.get(`/api/project/${projectId}/task/${taskId}`,{headers:{Authorization:`Token ${auth_token}`}});\n  }\n\n  updateTask(taskData){\n    const auth_token = localStorage.getItem('auth_token');\n    return this.http.put(`/api/project/${taskData.project}/task/${taskData.id}/`,taskData,{headers:{Authorization:`Token ${auth_token}`}});\n  }\n\n  deleteTask(projectId,taskId){\n    const auth_token = localStorage.getItem('auth_token');\n    return this.http.delete(`/api/project/${projectId}/task/${taskId}`,{headers:{Authorization:`Token ${auth_token}`}});\n  }\n\n  setUsers(users){\n    this.users = users;\n  }\n\n  getUsers(){\n    return this.users;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { taskDetails } from '../interfaces/taskDetails';\nimport { TaskService } from '../task.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { ActivatedRoute } from '@angular/router';\nimport {Location} from '@angular/common';\n\n@Component({\n  selector: 'app-task',\n  templateUrl: './task.component.html',\n  styleUrls: ['./task.component.css']\n})\n\nexport class TaskComponent implements OnInit {\n  taskData: taskDetails = {\n    name: \"\",\n    assignee: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    description: \"\",\n    id: 0,\n    status: false,\n    project: 1\n  };\n  users:[];\n  constructor(private taskService: TaskService,\n    private router:Router,\n    private toastr:ToastrService,\n    private route:ActivatedRoute,\n    private location: Location\n  ) { }\n\n  ngOnInit(): void {\n    let projectId = this.route.snapshot.params['projectId'];\n    let taskId = this.route.snapshot.params['taskId'];\n    this.users = this.taskService.getUsers();\n    this.taskService.fetchTaskDetails(projectId,taskId).subscribe((data:taskDetails)=>{\n      this.taskData = data;\n    },(err:HttpErrorResponse)=>{\n      this.toastr.error('Error!', err.error.detail);\n      this.router.navigate(['dashboard']);\n    });\n  }\n\n  updateTask(){\n    \n    this.taskService.updateTask(this.taskData).subscribe((data)=>{\n      this.toastr.success('Success!', 'Updated task successfully!');\n    },(err:HttpErrorResponse)=>{\n      this.toastr.error('Error!', err.error.detail);\n      \n    });\n  }\n\n  back(){\n    this.location.back();\n  }\n\n  deleteTask(){\n    this.taskService.deleteTask(this.taskData.project,this.taskData.id).subscribe((data)=>{\n      this.location.back();\n      this.toastr.success('Success!', 'Deleted task successfully!');\n    },(err:HttpErrorResponse)=>{\n      this.toastr.error('Error!', err.error.detail);\n      \n    });\n  }  \n\n}\n","<div class=\"taskDetailsDiv\">\n    <mat-form-field appearance=\"outline\" class=\"name\">\n        <mat-label>Task Name</mat-label>\n        <input matInput [(ngModel)]=\"taskData.name\">\n    </mat-form-field>\n    <br/>\n    <mat-form-field appearance=\"outline\" class=\"description\">\n        <mat-label>Description</mat-label>\n        <textarea rows=10 matInput [(ngModel)]=\"taskData.description\"></textarea>\n    </mat-form-field>\n    <br/>\n    <mat-form-field appearance=\"outline\" class=\"startDate\">\n        <mat-label>Start Date</mat-label>\n        <input matInput type=\"date\" [(ngModel)]=\"taskData.startDate\">\n    </mat-form-field>\n    \n    <mat-form-field appearance=\"outline\" class=\"endDate\">\n        <mat-label>End Date</mat-label>\n        <input matInput type=\"date\" [(ngModel)]=\"taskData.endDate\">\n    </mat-form-field>\n    <br/>\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Assignee</mat-label>\n        <mat-select placeholder=\"Assignee\" [(ngModel)]=\"taskData.assignee\">\n            <mat-option *ngFor=\"let user of users\" [value]=\"user[1]\">\n                {{ user[0] }}\n            </mat-option>\n        </mat-select>\n    </mat-form-field>\n    <mat-slide-toggle [checked]=\"taskData.status\" [(ngModel)]=\"taskData.status\">Status</mat-slide-toggle>\n    <br/>\n    <button class=\"mat-raised-button\" (click)=\"back()\">Close</button>\n    <button class=\"mat-raised-button save mat-primary\" (click)=\"updateTask()\">Update</button>\n    <button class=\"mat-raised-button save mat-warn\" (click)=\"deleteTask()\">Delete</button>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}